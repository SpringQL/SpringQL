name: release

on:
  workflow_dispatch:
    inputs: 
      current_version:
        description: 'current version number (example `0.15.1`)'
        required: true
        type: string
      release_version:
        description: 'release version number (example `0.15.1`)'
        required: true
        type: string

jobs:
  release:
    env:
      CURRENT_VERSION: ${{ github.event.inputs.current_version }}
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          ref: main
          token: ${{ secrets.GHPAT_FOR_PUSH_RELEASE }}

      - name: Show initial git status 
        run: |
          echo '### Initial git status' >> $GITHUB_STEP_SUMMARY
          echo '```console' >> $GITHUB_STEP_SUMMARY
          git status -v >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Cache install release tools
        id: cache_tools
        uses: actions/cache@v2      
        with:
          key: cache_tools_0
          path: |
            ~/.cargo/bin
        
      - name: Install release tools
        if: ${{ steps.cache_tools.outputs.cache-hit==false }}
        run: |
          cargo install cargo-edit toml-cli

      - name: git config
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "SpringQL release script"

      - name: edit changelog
        run: |
          # load helper script
          source .github/workflows/scripts/keep-a-changelog.bash
          # edit CHANGELOG.md
          cp CHANGELOG.md CHANGELOG.md.org
          cat CHANGELOG.md.org | bump_changelog "v${CURRENT_VERSION}" "v${RELEASE_VERSION}" > CHANGELOG.md
          rm CHANGELOG.md.org
      
      - name: bump crate versions
        run: |
          cargo set-version -p springql-release-test ${RELEASE_VERSION}
          cargo set-version -p springql-core-release-test ${RELEASE_VERSION}
          cd springql
          cp Cargo.toml Cargo.toml.org
          toml set Cargo.toml.org dependencies.springql-core-release-test.version "${RELEASE_VERSION}" > Cargo.toml
          rm Cargo.toml.org
          cd ..


      - name: commit changes
        run: |
          git add .
          git commit -m "update for release v${RELEASE_VERSION}"

      - name: Show commit diff
        run: |
          echo '### Release Commit' >> $GITHUB_STEP_SUMMARY
          echo '```diff' >> $GITHUB_STEP_SUMMARY
          git diff HEAD^ >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: git tag
        run: |
          git tag "v${RELEASE_VERSION}"

      - name: Show final git status 
        run: |
          echo '### Final git status' >> $GITHUB_STEP_SUMMARY
          echo '```console' >> $GITHUB_STEP_SUMMARY
          git status -v >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Turn off enforce admin
        env: 
          GITHUB_TOKEN: ${{ secrets.GHPAT_FOR_PUSH_RELEASE }}
          REPO: ${{ github.repository }}
          BRANCH: main
        run: |
          source .github/workflows/scripts/github-branch-protection.bash
          enforce_admins_off

      - name: git push
        run: |
          git remote set-url origin "https://github-actions:${{ secrets.GHPAT_FOR_PUSH_RELEASE }}@github.com/${GITHUB_REPOSITORY}"
          git push -v --force origin main
          git push -v --force origin "v${RELEASE_VERSION}"

      - name: Turn on enforce admin
        env: 
          GITHUB_TOKEN: ${{ secrets.GHPAT_FOR_PUSH_RELEASE }}
          REPO: ${{ github.repository }}
          BRANCH: main
        run: |
          source .github/workflows/scripts/github-branch-protection.bash
          enforce_admins_on

      - name: cargo publish
        run: |
          # load helper script
          source .github/workflows/scripts/crates.io-script.bash

          cargo login "${{ secrets.CRATES_IO_TOKEN }}"

          cargo publish -p springql-core-release-test
          wait_published "springql-core-release-test" "${RELEASE_VERSION}" 2> /dev/null
          cargo publish -p springql-release-test
          wait_published "springql-release-test" "${RELEASE_VERSION}" 2> /dev/null
